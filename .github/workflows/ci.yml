name: Build

on: [push]

env:
  DOTNET_VERSION: 8.x.x

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      runtimes: ${{ steps.runtimes.outputs.runtimes }}
    steps:
      - name: Set Runtimes
        id: runtimes
        run: |
          [[ ${{ github.ref_name }} == main ]] && \
          RUNTIMES="[\"win-x64\", \"linux-x64\", \"linux-arm64\", \"osx-x64\", \"osx-arm64\"]" || \
          RUNTIMES="[\"linux-x64\"]"
          echo $RUNTIMES
          echo "runtimes=$RUNTIMES" >> $GITHUB_OUTPUT
        shell: bash

  build:
    needs: setup
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        runtime: ${{ fromJson(needs.setup.outputs.runtimes) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: ./SierraSam/packages.lock.json
      - name: Restore Dependencies
        run: dotnet restore --locked-mode
      - name: Build
        run: |
          dotnet build ./SierraSam/SierraSam.csproj \
          --configuration Release \
          --no-restore \
          --runtime ${{ matrix.runtime }} \
          --self-contained
      - name: Cache Build Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ./*/bin/
            ./*/obj/
          key: ${{ matrix.runtime }}-build-${{ github.sha }}

  sqlserver:
    needs: build
    uses: ./.github/workflows/sqlserver.yml

  postgres:
    needs: build
    uses: ./.github/workflows/postgres.yml

  mysql:
    needs: build
    uses: ./.github/workflows/mysql.yml

  oracle:
    needs: build
    uses: ./.github/workflows/oracle.yml

  test:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: ./SierraSam/packages.lock.json
      - name: Restore Dependencies
        run: dotnet restore --locked-mode
      - name: Run Tests
        if: success()
        run: |
          dotnet test \
          --no-restore \
          --filter "Category!=SqlServer&Category!=Postgres&Category!=MySql&Category!=Oracle" \
          --configuration Release \
          --verbosity normal \
          --logger trx
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test_results
          path: ./**/TestResults/*.trx
          retention-days: 30

  publish:
    if: ${{ github.ref_name == 'main' }}
    needs: [setup, test, oracle, mysql, postgres, sqlserver]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        runtime: ${{ fromJson(needs.setup.outputs.runtimes) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: ./SierraSam/packages.lock.json
      - name: Restore Dependencies
        run: dotnet restore --locked-mode
      - name: Restore Build Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ./*/bin/
            ./*/obj/
          key: ${{ matrix.runtime }}-build-${{ github.sha }}
      - name: Publish
        run: |
          dotnet publish ./SierraSam/SierraSam.csproj \
          --configuration Release \
          --no-build \
          --runtime ${{ matrix.runtime }} \
          --self-contained
      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: SierraSam-${{ matrix.runtime }}
          path: ./SierraSam/bin/Release/net8.0/${{ matrix.runtime }}/publish
